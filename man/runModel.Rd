% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runmodel.r
\name{runModel}
\alias{runModel}
\title{Model fitting}
\usage{
runModel(
  data,
  index_year,
  index_site,
  index_occ,
  index_spatial_x = 0,
  index_spatial_y = 0,
  covariates_psi_text,
  covariates_p_text,
  prior_psi = 0.5,
  sigma_psi = 2,
  prior_p = 0.5,
  sigma_p = 2,
  usingYearDetProb = F,
  usingSpatial = F,
  gridStep,
  storeRE = F,
  nchain,
  nburn,
  niter,
  verbose = T,
  computeGOF = T
)
}
\arguments{
\item{data}{The data frame containing the data.}

\item{index_year}{The index of the column containing the year variable.}

\item{index_site}{The index of the column containing the site variable.}

\item{index_occ}{The index of the column containing the detections.}

\item{index_spatial_x}{The index of the x coordinate of the site.}

\item{index_spatial_y}{The index of the y coordinate of the site.}

\item{covariates_psi_text}{Indexes of the column of the occupancy probability. To be separated by a comma, eg. "5,6,8". Set to "0" if no covariate is available}

\item{covariates_p_text}{Indexes of the column of the detection probability.}

\item{prior_psi}{Prior mean for the occupancy probability}

\item{sigma_psi}{Standard deviation for the prior on the occupancy probability}

\item{prior_p}{Prior mean for the detection probability}

\item{sigma_p}{Standard deviation for the prior on the detection probability}

\item{usingYearDetProb}{Should the model include year-specific detection probabilities (as opposed to a constant one)?}

\item{usingSpatial}{Should the model include the auto-correlated spatial effects?}

\item{gridStep}{Step of the grid to use for the approximation of the auto-correlated spatial effects. Use \code{\link{buildSpatialGrid}} to show the grid for a value of \code{gridStep}.}

\item{storeRE}{Should the model store the site-specific independent random effects for each iteration (instead of just their mean across all chain)? Not suggested if the number of sites is greater than 1000.}

\item{nchain}{Number of chains.}

\item{nburn}{Number of burn-in iterations.}

\item{niter}{Number of (non burn-in) iterations.}

\item{verbose}{Should the progress of the MCMC be printed?.}

\item{computeGOF}{Should the model perform calculations of the goodness of fit?}
}
\value{
A list with components:

\itemize{

 \item \code{modelResults} A list with components:
      
      \describe{
      
      \item{\code{beta_psi_output}}{ An array of dimensions \code{nchain} x \code{niter} x (number of coefficients for 
      occupancy probability) containing the values of the coefficients of the occupancy probability.
     The coefficients are reported in the order (year r.e., space r.e., covariates for time-space interaction,
      standard covariates).}
      
      \item{\code{eps_unique_output}}{ if \code{storeRE = T}, an array of dimensions 
      \code{nchain} x \code{niter} x S containing the values of the site-specific independent random effects
       of the occupancy probability. If  \code{storeRE = F}, a matrix of dimensions \code{nchain} x S 
       containing the mean value of the random effect across a chain.}
      
      \item{\code{beta_p_output}}{ An array of dimensions \code{nchain} x \code{niter} x (number of coefficients for 
      detection probability) containing the values of the coefficients of the detection probability.
       The coefficients are reported in the order (intercepts, covariates).}
      
       \item{\code{sigma_T_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       \eqn{\sigma_T}.}
       
       \item{\code{l_T_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       \eqn{l_T}.}
       
       \item{\code{sigma_s_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       \eqn{\sigma_S}.}
       
       \item{\code{l_s_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       \eqn{l_S}.}
       
       \item{\code{sigma_eps_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       \eqn{\sigma_\epsilon}.}
       
       \item{\code{psi_mean_output}}{ A array of dimensions \code{nchain} x \code{niter} containing the values of
       the occupancy index.}
       
       \item{\code{GOF_output}}{ A list with components:
       
       \describe{
       
       \item{  \code{gofYear_output} }{An array of dimensions \code{nchain} x \code{niter} x Y containing the values 
         of the test statistics of yearly detections.}
       
       \item{  \code{gofSpace_output} }{An array of dimensions \code{nchain} x \code{niter} x (M), where M is the number
       of regions in the approximation, containing the values of the test statistics of the detections in
       each region.}
       
       \item{  \code{trueYearStatistics} }{ A vector containing the true values of the test statistics of the detections
        in each year.}
        
       \item{  \code{trueSpaceStatistics} }{ A vector containing the true values of the test statistics of the detections
        in each region}
       
       }
     
       }
     
     }
     
       
      \item \code{dataCharacteristics}: A list with components:
       
      \describe{
      
      \item{\code{Years}}{A vector with the years.}
      
      \item{\code{X_tilde}}{A matrix of dimension M x 2, where M is the number of points chosen in the 
      spatial approximation, with the location of the points used for the approximation. The points are
      arranged in the same as order as in the coefficients vector \code{beta_psi_output}.}
      
      \item{\code{gridStep}}{The width of the grid chosen in the approximation.}
      
      \item{\code{usingSptial}}{Same as in the input.}
      
       \item{\code{usingYearDetProb}}{Same as in the input.}
       
      
      }
 }
}
\description{
This function fits the occupancy model of Diana et al. (2021). 
Note that in the following the parameters are described with the notations used in the paper.
}
\examples{

modelResults <- runModel(sampleData, 
                         index_year = 1, 
                         index_site = 2, 
                         index_occ = 8, 
                         index_spatial_x = 3, 
                         index_spatial_y = 4, 
                         covariates_psi_text = "5", 
                         covariates_p_text = "6-7", 
                         usingSpatial = TRUE,
                         gridStep = .2, 
                         nchain = 1, 
                         nburn = 100,
                         niter = 100)  

}
